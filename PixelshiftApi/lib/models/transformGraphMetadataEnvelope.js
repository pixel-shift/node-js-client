/*
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * A wrapped for RawTransformGraph instances, containing operation-specific
 * metadata
 *
 */
class TransformGraphMetadataEnvelope {
  /**
   * Create a TransformGraphMetadataEnvelope.
   * @member {object} [graph] The transform graph that represents the operation
   * @member {array} [graph.transforms] A list of transforms that run one after
   * another, piping content from one transform to the next
   * @member {array} [graph.outputs] A list of output transform graphs, each
   * one receiving the output of the last transform in the "transforms"
   * collection
   * @member {uuid} [operationId] The operation id of this operation
   * @member {uuid} [batchId] The batch id of the batch containing this
   * operation
   * @member {uuid} [accountId] The account id of the account that will be/was
   * charged for this operation
   * @member {number} [ownerId] The user id of the user that submitted this
   * batch
   */
  constructor() {
  }

  /**
   * Defines the metadata of TransformGraphMetadataEnvelope
   *
   * @returns {object} metadata of TransformGraphMetadataEnvelope
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'TransformGraphMetadataEnvelope',
      type: {
        name: 'Composite',
        className: 'TransformGraphMetadataEnvelope',
        modelProperties: {
          graph: {
            required: false,
            serializedName: 'graph',
            type: {
              name: 'Composite',
              className: 'TransformGraph'
            }
          },
          operationId: {
            required: false,
            serializedName: 'operationId',
            type: {
              name: 'String'
            }
          },
          batchId: {
            required: false,
            serializedName: 'batchId',
            type: {
              name: 'String'
            }
          },
          accountId: {
            required: false,
            serializedName: 'accountId',
            type: {
              name: 'String'
            }
          },
          ownerId: {
            required: false,
            serializedName: 'ownerId',
            type: {
              name: 'Number'
            }
          }
        }
      }
    };
  }
}

module.exports = TransformGraphMetadataEnvelope;
