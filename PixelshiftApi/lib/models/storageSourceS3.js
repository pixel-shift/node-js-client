/*
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * Describes the source location of a graph. Must appear only once at the front
 * of transform sequences (or as the
 * head element in the conceptual transform graph) and be immediately preceded
 * by an ImageFormatTransformPipe
 * such as ImageFormat_Jpeg/ImageFormat_Tiff/ImageFormat_Png/ImageFormat_Webp
 *
 * @extends models['TransformUnit']
 */
class StorageSourceS3 extends models['TransformUnit'] {
  /**
   * Create a StorageSourceS3.
   * @member {string} sourceKey Source key name
   * @member {string} sourceBucket Source bucket name
   */
  constructor() {
    super();
  }

  /**
   * Defines the metadata of StorageSourceS3
   *
   * @returns {object} metadata of StorageSourceS3
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'StorageSource_S3',
      type: {
        name: 'Composite',
        polymorphicDiscriminator: {
          serializedName: 'kind',
          clientName: 'kind'
        },
        uberParent: 'TransformUnit',
        className: 'StorageSourceS3',
        modelProperties: {
          kind: {
            required: true,
            serializedName: 'kind',
            isPolymorphicDiscriminator: true,
            type: {
              name: 'String'
            }
          },
          sourceKey: {
            required: true,
            serializedName: 'sourceKey',
            type: {
              name: 'String'
            }
          },
          sourceBucket: {
            required: true,
            serializedName: 'sourceBucket',
            type: {
              name: 'String'
            }
          }
        }
      }
    };
  }
}

module.exports = StorageSourceS3;
