/*
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * Output to Png
 *
 * @extends models['TransformUnit']
 */
class ImageFormatPng extends models['TransformUnit'] {
  /**
   * Create a ImageFormatPng.
   * @member {number} [compressionLevel] Png compression level. Default value:
   * 9 .
   * @member {boolean} [progressive] Create progressive/interlace scan png.
   * Default value: false .
   * @member {boolean} [adaptiveFiltering] Use adaptive row filtering. Default
   * value: false .
   */
  constructor() {
    super();
  }

  /**
   * Defines the metadata of ImageFormatPng
   *
   * @returns {object} metadata of ImageFormatPng
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'ImageFormat_Png',
      type: {
        name: 'Composite',
        polymorphicDiscriminator: {
          serializedName: 'kind',
          clientName: 'kind'
        },
        uberParent: 'TransformUnit',
        className: 'ImageFormatPng',
        modelProperties: {
          kind: {
            required: true,
            serializedName: 'kind',
            isPolymorphicDiscriminator: true,
            type: {
              name: 'String'
            }
          },
          compressionLevel: {
            required: false,
            serializedName: 'compressionLevel',
            defaultValue: 9,
            constraints: {
              InclusiveMaximum: 9,
              InclusiveMinimum: 0
            },
            type: {
              name: 'Number'
            }
          },
          progressive: {
            required: false,
            serializedName: 'progressive',
            defaultValue: false,
            type: {
              name: 'Boolean'
            }
          },
          adaptiveFiltering: {
            required: false,
            serializedName: 'adaptiveFiltering',
            defaultValue: false,
            type: {
              name: 'Boolean'
            }
          }
        }
      }
    };
  }
}

module.exports = ImageFormatPng;
