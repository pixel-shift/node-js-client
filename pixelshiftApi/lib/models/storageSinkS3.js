/*
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * Describes the destination location of a branch of the graph. Must appear at
 * the end of transform sequences (or
 * as a leaf in the conceptual transform graph) and be immediately preceded by
 * an ImageFormatTransformPipe
 * (type:"Image.OutputFormat")
 *
 * @extends models['TransformUnit']
 */
class StorageSinkS3 extends models['TransformUnit'] {
  /**
   * Create a StorageSinkS3.
   * @member {string} destinationKey Destination key name
   * @member {string} destinationBucket Destination bucket name
   * @member {boolean} [allowOverwrite] Allow overwrite of destination. Default
   * value: false .
   */
  constructor() {
    super();
  }

  /**
   * Defines the metadata of StorageSinkS3
   *
   * @returns {object} metadata of StorageSinkS3
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'StorageSink_S3',
      type: {
        name: 'Composite',
        polymorphicDiscriminator: {
          serializedName: 'kind',
          clientName: 'kind'
        },
        uberParent: 'TransformUnit',
        className: 'StorageSinkS3',
        modelProperties: {
          kind: {
            required: true,
            serializedName: 'kind',
            isPolymorphicDiscriminator: true,
            type: {
              name: 'String'
            }
          },
          destinationKey: {
            required: true,
            serializedName: 'destinationKey',
            type: {
              name: 'String'
            }
          },
          destinationBucket: {
            required: true,
            serializedName: 'destinationBucket',
            type: {
              name: 'String'
            }
          },
          allowOverwrite: {
            required: false,
            serializedName: 'allowOverwrite',
            defaultValue: false,
            type: {
              name: 'Boolean'
            }
          }
        }
      }
    };
  }
}

module.exports = StorageSinkS3;
